@startuml interactive-server
!pragma teoz true

title GetAuthenticationStateAsync [InteractiveServer]

participant "Client" as client
participant "Blazor Server" as server
participant "InteractiveServerAuthenticationStateProvider" as provider

client -> server: Render page (interactive)
activate server
server -> provider: GetAuthenticationStateAsync
activate provider
provider -> provider: Generate unique request identifier
provider -> server: Subscribe (id: uniqueIdentifier)
activate server
server --> provider
deactivate server
provider -> client: [MakeHttpRequest]
note right of client
Call Blazor Client via JS Interop
to make an HTTP Request to Blazor Server
end note
activate client
client -->> provider: Ack
provider -> provider: Wait for OnClientSideHttpRequest
activate provider
client -> server: HTTP Request
activate server
server -> server: InteractiveServerClientSideHttpRequestEvent (id: uniqueIdentifier)
server -> provider: OnClientSideHttpRequest (id: uniqueIdentifier, request: HttpRequest)
provider -> provider: Exit wait, return HttpRequest
deactivate provider
provider -> provider: if AccessToken expired: Refresh JwtPair
provider -> provider: Generate AuthenticationState
provider --> server: AuthenticationState, UpdatedCookies
deactivate provider
server -> server: Remove Subscription (id: uniqueIdentifier)
server -> server: Update cookies in HttpResponse
deactivate server
server --> client: OK
deactivate client
server -> server: Render page
server --> client: Page
deactivate server

@enduml